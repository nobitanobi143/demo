 importjava.util.Scanner;
 //================INTERFACEPaymentProcessor==================//
 interfacePaymentProcessor{
 voidpay(intamount);//interfacemethodpay
 }
 //====================CLASSCreditCard=======================//
 //implementingPaymentProcessorinterface
 classCreditCardimplementsPaymentProcessor{
 Scannersc=newScanner(System.in);//creatingobjectofscannerclass
 Stringname,ExpDate;//declarationofname,ExpDate
 doubleCardNo;//declarationofCardNo
 //ConstructorofCreditCardclass
 CreditCard(){
 super();//callingparentclassconstructor
 System.out.println("-------------------------------------------------------");
 System.out.print("\tCardholderName::");//printingonconsole
 this.name=sc.next();//takingCardholderNameasinputfromuser
 System.out.print("\tCardNumber::");//printingonconsole
 this.CardNo=sc.nextDouble();//takingCardNumberasinputfrom
 user
 System.out.print("\tCardExpireDate::");//printingonconsole
 this.ExpDate=sc.next();//takingCardExpireDateasinputfromuser
 System.out.println("-------------------------------------------------------");
 }
 @Override
 publicvoidpay(intamount){ //methodforpayment
 System.out.println("--------------------------------------------------------");
 System.out.println("PayingthroughCreditCardpayment:Charging$"+
 amount);
 System.out.println("----------------------------------------------------------");
 }
 }
 //=======================CLASSPayPal=======================//
 //implementingPaymentProcessorinterface
 classPayPalimplementsPaymentProcessor{
 //ConstructorofPayPalclass
PayPal(){
 super();//callingparentclassconstructor
 System.out.println("\nCheckingInternetConnection........");
 }
 @Override
 publicvoidpay(intamount){ //methodforpayment
 System.out.println("----------------------------------------------------------");
 System.out.println("PayingthroughPayPalpayment:Charging$"+
 amount);
 System.out.println("----------------------------------------------------------");
 }
 }
 //=======================CLASSBitCoin=======================//
 //implementingPaymentProcessorinterface
 classBitCoinimplementsPaymentProcessor{
 Scannersc=newScanner(System.in);//creatingobjectofscannerclass
 Stringadd;//declarationofadd
 //ConstructorofBitCoinclass
 BitCoin(){
 super();//callingparentclassconstructor
 System.out.print("\nEnterTransaction'InputAddress' ::");//askinguserof
 address
 add=sc.next();//taking'INPUTADDRESS'asinputfromuser
 }
 @Override
 publicvoidpay(intamount){ //methodforpayment
 System.out.println("--------------------------------------------------------");
 System.out.println("PayingthroughBitCoinpayment:Charging$"+
 amount);
 System.out.println("-------------------------------------------------------");
 }
 }
 //=======================CLASSOrder=======================//
 classOrder{
 privatefinalPaymentProcessorpaymentProcessor;//declarationofpaymentProcessor
 object
 privatefinalintamount;//declarationofamount
 //OrderMethod
 publicOrder(intamount,PaymentProcessorpaymentProcessor){
 this.amount=amount;//storingvalue
 this.paymentProcessor=paymentProcessor;//storingvalue
 }
 //processMethod
 publicvoidprocess(){
 paymentProcessor.pay(amount);//callingpaymethod
 }
 }
 //=======================CLASSMain=======================//
publicclassMain{
 //callingstaticvoidmainmethod
 publicstaticvoidmain(String[]args){
 intc,amt=0;//declarationofc,amt
 Orderorder;//referenceoforderassigntoorderobj
 Scannersc=newScanner(System.in);//creatingobjectofscannerclass
 while(true){//whileloopformenudriven
 System.out.println();
 //menubar
 System.out.println("****SHOPINGCART****");
 System.out.print("1.CreditCard\n2.PayPal\n3.BitCoin
 \n4.Exit");
 System.out.print("\n\nEntertheChoice::");
 c=sc.nextInt();//takinginputfromuser
 System.out.println("-------------------------------------------------");
 if(c==1||c==2||c==3){//checkwhether0<c<4
 System.out.print("\nEnteramounttobeTranfer::");
 amt=sc.nextInt();//takingamtasinputfromuser
 System.out.println("----------------------------------------");
 }
 //switchcase
 switch(c){
 case1://forinputc==1
 order=newOrder(amt,newCreditCard());//creatingobjof
 orderclass
 order.process();//callingprocessmethodoforderclass
 break;
 case2://forinputc==2
 order=newOrder(amt,newPayPal());//creatingobjof
 orderclass
 order.process();//callingprocessmethodoforderclass
 break;
 case3://forinputc==3
 order=newOrder(amt,newBitCoin());//creatingobjoforder
 class
 order.process();//callingprocessmethodoforderclass
 break;
 case4:
 System.out.println("\nThankyouForShopping!!!!");//printingon
 console
 System.out.println("--------------------------------------------------");
 return;//stopexecutionofprogram
 default:
 System.out.println("InvalidPaymentMode!!!");//default
 System.out.println("------------------------------------------------");
 }
 }
 }
